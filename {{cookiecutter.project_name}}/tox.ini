[tox]
envlist = py{36,37,38,39}-{linux,macos}


[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    pypy3: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows


# Testing
# =============================================================================

[testenv]
description = Run tests with coverage with pytest under current Python env
usedevelop = true
setenv = COVERAGE_FILE=.coverage.{envname}
passenv = CI
deps =
    -rtests/requirements.txt
    coverage
commands =
    coverage run --source={{cookiecutter.project_name}} --parallel-mode -m pytest --doctest-modules  --durations=50 --durations-min 1 -vv --timeout=20 {posargs}
    coverage combine
    coverage report -m
    coverage xml

[testenv:final-coverage]
description = Combine coverage data across environments (run after tests)
skip_install = True
setenv = COVERAGE_FILE=.coverage
passenv = {[testenv]passenv}
deps = coverage
commands =
    coverage erase
    coverage combine
    coverage report -m
    coverage xml

[testenv:codecov]
description = Upload coverage data to codecov (only run on CI)
setenv =
    {[testenv:final-coverage]setenv}
passenv = {[testenv]passenv}
deps = codecov
commands = codecov --required

# -----------------------------------------------------------------------------
# Linting
# =============================================================================

[testenv:black]
description = Verify code style with black
basepython = python3
skip_install = true
deps =
    black == 20.8b1
commands =
    black --check src/orion/ tests/

[testenv:isort]
description = Use isort to check import orders
basepython = python3
skip_install = true
deps =
    isort == 5.6.*
commands =
    isort --profile black -c {{cookiecutter.project_name}} tests/

[testenv:pylint] # Will use the configuration file `.pylintrc` automatically
description = Perform static analysis and output code metrics
basepython = python3
skip_install = false
deps =
    pylint == 2.5.*
commands =
    pylint {{cookiecutter.project_name}}

[testenv:doc8]
description = Impose standards on *.rst documentation files
basepython = python3
skip_install = true
deps =
    -rdocs/requirements.txt
    doc8 == 0.8.*
commands =
    doc8 docs/

[testenv:docs]
description = Invoke sphinx to build documentation and API reference
basepython = python3
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -b html -d build/doctrees -nWT docs/ docs/build/html

[testenv:run-black]
description = Run code style modification with black
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
commands =
    black {{cookiecutter.project_name}} tests/


[testenv:run-isort]
description = Run isort to fix import orders
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
commands =
    isort --profile black {{cookiecutter.project_name}} tests/

# -----------------------------------------------------------------------------


# Tool Configuration
# =============================================================================

# Pytest configuration
[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config docs dist build
xfail_strict = True
rsyncdirs = {{cookiecutter.project_name}} tests
looponfailroots = {{cookiecutter.project_name}} tests examples

# Coverage configuration
[coverage:run]
branch = True
source =
    {{cookiecutter.project_name}}
    tests
omit = **/_[a-zA-Z0-9]*.py

# -----------------------------------------------------------------------------
